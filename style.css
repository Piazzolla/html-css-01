/*
    Collapsing margins: 
    cuando tenes dos elementos uno arriba del otro y el de arriba tiene margin-bottom y el de abajo
    tiene margin-top los margenes NO SE SUMAN, SE SUPERPONEN
    si el de arriba tiene margin-bottom 15px, y el de abajo tiene margin-top 40px, el margen total va a
    ser de 40px!!!
*/


* {
    /* esto resetea todos los defaults del browser, esto es muy util
    hay que hacerlo aca en el universal selector porque si lo haces en body
    no te agarra los texts  */ 
    margin: 0;
    padding: 0;
}


body {
    color: #444444;
    font-family: sans-serif;
    border-top: 10px solid #1098ad;
    position: relative;
}

.container {
    width: 70%;
 /*   margin-left: auto;
    margin-right: auto;*/
    margin: 0 auto; /* esto es un shorthand para lo que esta comentado arriba */
}

article {
    margin-bottom: 60px;
}

.main-header {
    background-color: #f7f7f7;
    /* padding: 20px; 
    padding-left: 40px;  
    padding-right: 40px;   */
    padding: 20px 40px;
    margin-bottom: 60px; /* para espaciar elementos es mejor usar siempre el mismo en cada elemento
    sea margin-bottom o margin-top, y no ponerle margin bottom y top a uno solo */
    /* height: 80px; */
}

.post-header {
    margin-bottom: 40px;
}

aside {
    background-color: #f7f7f7;
    border-top: 5px solid #1098ad;
    border-bottom: 5px solid #1098ad;
    padding: 50px 0;
    width: 500px;
}

h1, h2, h3, h4, p, li {
    font-family: sans-serif;
}

h1, h2, h3 {
    color: #1098ad;
    text-emphasis: '';
}

h1 {
    font-size: 26px;
    text-transform: uppercase;
    font-style: italic;
}

h2 {
    font-size: 40px;
    margin-bottom: 30px
}

h3 {
    font-size: 30px;
    margin-bottom: 20px;

}

h4 {
    font-size: 30px;
    text-transform: uppercase;
    text-align: center;
}

p {
    font-size: 22px;
    line-height: 1.5;
    margin-bottom: 15;

}

ul, ol {
    margin-left: 50px;
    margin-bottom: 20px
    
}

li {
    font-size: 20px;
    margin-bottom: 10px;
}

li:last-child {
    margin-bottom: 0;
}

/* footer p {
    font-size: 16px;
} */


#copyright {
    font-size: 16px;
}

#author {
    font-style: italic;
    font-size: 18px;
}


.related-author {
    font-size: 18px;
    font-weight: bold;
}

.related-posts {
    list-style: none;
}



li:first-child {
    font-weight: bold;
}

/*
li:nth-child(2) {
    color: red;
}*/
/*
li:nth-child(odd) {
    color: red;
}*/

a:link {
    color: #1098ad;
    text-decoration: none;
}

a:visited {
    /* color: #777; */
    color: #1098ad;
}

a:hover {
    color: orangered;
    font-weight: bold;
    text-decoration: underline orangered;
}

a:active {
 background-color: black;
 font-style: italic   
}
/* Normalmente el styling de a se hace en este orden, link, visited, hover, active */
/* LVHA */

/* Procedencia de selectores de mayor prioridad a menor: primero el id #, 
despu[es la clase .clase despues el element selector div, li, etc, finalmente el universal selector *  */

/* Resoling conflicts */

.post-img {
   /* width: 800px;
    height: auto;
    este height auto lo necesito si seteo asi el width porque en el html tengo seteado height y width
    el width lo sobreescribo aca con css, pero me queda el height que defini en el html
    entonces este height auto hace que la imagen acomode la altura y quede con las proporciones originales
    */

    width: 100%;
    height: auto;
}

nav a:link {
    /* background-color: orange;
    margin: 20px;
    padding: 20px;
    display: block; */
    margin-right: 30px;
    margin-top: 10px;
    display: inline-block;
}

nav a:link:last-child {
    margin-right: 0;
}

#copyright {
    color: red;
}

.copyright {
    color: blue;
}

.text {
    color: yellow;
}

footer p {
    color: green;
}

button {
    font-size: 22px;
    padding: 20px;
    cursor: pointer;

    position: absolute;
    bottom: 50px;
    right: 50px;
}

/* 
    --------- TIPOS DE BOXES ---------

    * las boxes mas comunes, se llaman block elements, como un div, article, h1, etc ocupan todo el ancho de su contenedor
    body, main, header, footer, section, nav, aside, div, h1-h6, p, ul, ol, li, etc son block elements
    
    * pero despues estan las inline boxes, como <strong> <a> se ajustan al tamanio de su contenido.
    a los inline elements los paddings y margins se le aplican solamente horizontalmente, left and right
    no causan line-breaks 
    HEIGHTS AND WEIGHTS DO NOT APPLY!
    inline elemnts por default: a, strong, em, button, etc


    Podemos cambiar el tipo de caja con la propiedad display: block o display: inline


    * inline-block es una mezcla entre las dos
    son inline desde afuera, pero se comportan como block adentro 
    solo ocupan el espacio de su contenido, no causan line breaks
    se comportan como blocks con los heights y widths, margins, paddings
    se setean con display: inline-block

    los elementos img se comportan como inline-blocks por defecto


    ------------ POSITIONING -------------

    el normal flow es como los elementos se acomodan por defecto, tal como estan escritos en el html de acuerdo
    a las reglas de las boxes
    esto equivale a setear position: relative
    los elementos que se disponen de esta manera estan "in flow"

    absolute positioning te permite tener elementos "out of flow", en posiciones arbitrarias
    no impactan en los elementos que lo rodean, se puede superponer
`   se usan offset top, bottom, left y right para posicionar el elemento respecto de su contenedor relativamente posicionado
    o sea, el contenedor con position: relative (por default)

    por default los offsets van a ser en relacion al viewport, cosa que normalemente no queremos, tenemos que especificar 
    respecto de que estamos posicionando seteando explicitamente position: relative.

    no hay que abusar de esto, se usa para poner un elemento especial en un lugar especial pero no para el 
    layout general de los elementos de la pagina








    
    
*/
